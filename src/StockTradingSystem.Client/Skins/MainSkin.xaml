<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">

    <Style x:Key="WindowTitleBtn" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="DockPanel.Dock" Value="Right"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{Binding Main.ThemeBrush, Source={StaticResource Locator}}">
                        <Rectangle Stroke="{x:Null}" StrokeThickness="0" Fill="Transparent" x:Name="background" SnapsToDevicePixels="True"/>
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="background" Value="#41FFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="background" Value="#33000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WindowMinBtn" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="DockPanel.Dock" Value="Right"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="ToolTip" Value="最小化"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{Binding Main.ThemeBrush, Source={StaticResource Locator}}">
                        <Rectangle Stroke="{x:Null}" StrokeThickness="0" Fill="Transparent" x:Name="background" SnapsToDevicePixels="True"/>
                        <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Line X2="10" Stroke="White" StrokeThickness="2" SnapsToDevicePixels="True"/>
                        </Grid>
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="background" Value="#41FFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="background" Value="#33000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WindowMaxBtn" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="DockPanel.Dock" Value="Right"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{Binding Main.ThemeBrush, Source={StaticResource Locator}}">
                        <Rectangle Stroke="{x:Null}" StrokeThickness="0" Fill="Transparent" x:Name="background" SnapsToDevicePixels="True"/>
                        <Grid>
                            <Grid x:Name="NormalGrid" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Rectangle Height="10" Width="10" Stroke="White" Fill="{x:Null}" StrokeThickness="2" SnapsToDevicePixels="True"/>
                            </Grid>
                            <Grid x:Name="MaxGrid" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Rectangle Height="10" Width="10" Margin="-5 0 0 -5" Stroke="White" Fill="{x:Null}" StrokeThickness="2" SnapsToDevicePixels="True"/>
                                <Line Stroke="White" X1="3" X2="13" Y1="1" Y2="1" StrokeThickness="2" SnapsToDevicePixels="True"/>
                                <Line Stroke="White" X1="12" X2="12" Y1="0" Y2="10" StrokeThickness="2" SnapsToDevicePixels="True"/>
                                <Line Stroke="White" X1="4" X2="4" Y1="0" Y2="4" StrokeThickness="2" SnapsToDevicePixels="True"/>
                                <Line Stroke="White" X1="8" X2="13" Y1="9" Y2="9" StrokeThickness="2" SnapsToDevicePixels="True"/>
                            </Grid>
                        </Grid>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Content="{TemplateBinding Content}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="background" Value="#41FFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="background" Value="#33000000"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Main.WindowState, Source={StaticResource Locator}}" Value="Maximized">
                            <Setter Property="ToolTip" Value="向下还原"/>
                            <Setter Property="Visibility" TargetName="NormalGrid" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="MaxGrid" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Main.WindowState, Source={StaticResource Locator}}" Value="Normal">
                            <Setter Property="ToolTip" Value="最大化"/>
                            <Setter Property="Visibility" TargetName="NormalGrid" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="MaxGrid" Value="Visible"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WindowCloseBtn" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="DockPanel.Dock" Value="Right"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="ToolTip" Value="关闭"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{Binding Main.ThemeBrush, Source={StaticResource Locator}}">
                        <Rectangle Stroke="{x:Null}" StrokeThickness="0" Fill="Transparent" x:Name="background" SnapsToDevicePixels="True"/>
                        <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Line Stroke="White" StrokeThickness="2" X2="10" Y2="10" SnapsToDevicePixels="True"/>
                            <Line Stroke="White" StrokeThickness="2" X2="10" Y1="10" SnapsToDevicePixels="True"/>
                        </Grid>
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="background" Value="Red"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="background" Value="#FFFF6464"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ThemeBrushBtn" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10 2.5 10 2.5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{Binding Main.ThemeBrush, Source={StaticResource Locator}}">
                        <Rectangle Stroke="{x:Null}" StrokeThickness="0" Fill="{DynamicResource themeBrush}" x:Name="background" SnapsToDevicePixels="True"/>
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="background" Value="#41FFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="background" Value="#33000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NavBarBtn" TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="DarkGray"/>
        <Setter Property="FontSize" Value="27"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Padding" Value="20 0 20 4"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Grid>
                            <Rectangle Stroke="{x:Null}" StrokeThickness="0" Fill="#01FFFFFF" SnapsToDevicePixels="True"/>
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RenderTransformOrigin="0.5,0.5"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="LightGray"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="RenderTransform" TargetName="contentPresenter">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="TitleBtn" TargetType="{x:Type ToggleButton}">
        <Setter Property="Cursor" Value="{x:Static Cursors.Hand}"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Background" Value="{Binding Main.ThemeBrush, Source={StaticResource Locator}}"/>
        <Setter Property="FontSize" Value="32"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>